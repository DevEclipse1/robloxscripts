local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==1) then function v32(v43,v44,v45)if v45 then local v93=0;local v94;while true do if (v93==0) then v94=(v43/((2 + 0)^(v44-1)))%((774 -(201 + 571))^(((v45-1) -(v44-1)) + 1)) ;return v94-(v94%1) ;end end else local v95=0;local v96;while true do if (v95==0) then v96=2^(v44-1) ;return (((v43%(v96 + v96))>=v96) and (1139 -(116 + 1022))) or 0 ;end end end end v33=nil;function v33()local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v30,v30);v30=v30 + 1 ;v46=1;end if (v46==1) then return v47;end end end v34=nil;v29=2;end if (2==v29) then function v34()local v48=0;local v49;local v50;while true do if (0==v48) then v49,v50=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end v35=nil;function v35()local v51,v52,v53,v54=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;return (v54 * 16777216) + (v53 * (272843 -207307)) + (v52 * 256) + v51 ;end v36=nil;v29=3;end if (v29==5) then v41=nil;function v41(v55,v56,v57)local v58=v55[1];local v59=v55[6 -4 ];local v60=v55[3];return function(...)local v79=v58;local v80=v59;local v81=v60;local v82=v39;local v83=1 + 0 ;local v84= -1;local v85={};local v86={...};local v87=v20("#",...) -1 ;local v88={};local v89={};for v97=877 -(282 + 595) ,v87 do if (v97>=v81) then v85[v97-v81 ]=v86[v97 + 1 ];else v89[v97]=v86[v97 + 1 ];end end local v90=(v87-v81) + 1 ;local v91;local v92;while true do local v98=0;while true do if (v98==0) then v91=v79[v83];v92=v91[1638 -(1523 + 114) ];v98=1;end if (v98==1) then if (v92<=48) then if (v92<=23) then if (v92<=(10 + 1)) then if (v92<=5) then if (v92<=(1749 -(760 + 987))) then if (v92<=0) then local v134=0;local v135;local v136;local v137;while true do if (v134==1) then v137={};v136=v18({},{[v7("\60\122\38\247\55\87\74","\148\99\37\79\153\83\50\50")]=function(v344,v345)local v346=0;local v347;while true do if (0==v346) then v347=v137[v345];return v347[1][v347[2]];end end end,[v7("\114\98\120\118\11\122\213\73\88\110","\187\45\61\22\19\124\19")]=function(v348,v349,v350)local v351=0;local v352;while true do if (v351==0) then v352=v137[v349];v352[1][v352[2]]=v350;break;end end end});v134=2;end if (v134==2) then for v353=1,v91[4] do local v354=0;local v355;while true do if (1==v354) then if (v355[1]==(797 -(745 + 21))) then v137[v353-1 ]={v89,v355[3]};else v137[v353-1 ]={v56,v355[3]};end v88[ #v88 + (3 -2) ]=v137;break;end if (v354==0) then v83=v83 + 1 ;v355=v79[v83];v354=1;end end end v89[v91[2]]=v41(v135,v136,v57);break;end if (v134==0) then v135=v80[v91[1916 -(1789 + 124) ]];v136=nil;v134=1;end end elseif (v92>(1 -0)) then local v191=v91[2];local v192={};for v324=1, #v88 do local v325=v88[v324];for v356=0 + 0 , #v325 do local v357=0;local v358;local v359;local v360;while true do if (v357==1) then v360=v358[2];if ((v359==v89) and (v360>=v191)) then v192[v360]=v359[v360];v358[1]=v192;end break;end if (v357==0) then v358=v325[v356];v359=v358[1];v357=1;end end end end else v89[v91[1067 -(68 + 997) ]]=v57[v91[3]];end elseif (v92<=3) then if (v89[v91[2 + 0 ]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==4) then if (v89[v91[2]]~=v91[4]) then v83=v83 + 1 ;else v83=v91[3];end else local v196=v91[3];local v197=v89[v196];for v326=v196 + 1 ,v91[4] do v197=v197   .. v89[v326] ;end v89[v91[2]]=v197;end elseif (v92<=(1278 -(226 + 1044))) then if (v92<=6) then v89[v91[2]][v89[v91[3]]]=v89[v91[4]];elseif (v92>7) then local v199=0;local v200;local v201;local v202;while true do if (v199==0) then v200=v80[v91[13 -10 ]];v201=nil;v199=1;end if (v199==2) then for v413=1,v91[4] do local v414=0;local v415;while true do if (v414==0) then v83=v83 + 1 ;v415=v79[v83];v414=1;end if (v414==1) then if (v415[1]==(134 -103)) then v202[v413-(118 -(32 + 85)) ]={v89,v415[6 -3 ]};else v202[v413-1 ]={v56,v415[3]};end v88[ #v88 + 1 + 0 ]=v202;break;end end end v89[v91[1415 -(447 + 966) ]]=v41(v200,v201,v57);break;end if (1==v199) then v202={};v201=v18({},{[v7("\134\254\27\3\241\7\104","\170\217\161\114\109\149\98\16")]=function(v416,v417)local v418=0;local v419;while true do if (0==v418) then v419=v202[v417];return v419[1][v419[2 + 0 ]];end end end,[v7("\45\31\54\121\171\125\28\36\61\100","\20\114\64\88\28\220")]=function(v420,v421,v422)local v423=v202[v421];v423[1][v423[2]]=v422;end});v199=2;end end else v89[v91[5 -3 ]]={};end elseif (v92<=9) then local v140=0;local v141;while true do if (v140==0) then v141=v91[2];v89[v141](v21(v89,v141 + 1 ,v84));break;end end elseif (v92==(1827 -(1703 + 114))) then local v204=0;local v205;local v206;local v207;while true do if (v204==2) then if (v206>0) then if (v207<=v89[v205 + 1 ]) then v83=v91[3];v89[v205 + 3 ]=v207;end elseif (v207>=v89[v205 + (958 -(892 + 65)) ]) then v83=v91[3];v89[v205 + 3 ]=v207;end break;end if (v204==1) then v207=v89[v205] + v206 ;v89[v205]=v207;v204=2;end if (v204==0) then v205=v91[1 + 1 ];v206=v89[v205 + 2 ];v204=1;end end elseif (v89[v91[2]]==v91[9 -5 ]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=17) then if (v92<=(22 -8)) then if (v92<=12) then v89[v91[5 -3 ]][v91[3]]=v89[v91[4]];elseif (v92==13) then v89[v91[1 + 1 ]][v91[6 -3 ]]=v89[v91[6 -2 ]];else v89[v91[2]]=v91[3];end elseif (v92<=(29 -(9 + 5))) then v89[v91[2]]=v89[v91[4 -1 ]]%v89[v91[4]] ;elseif (v92==16) then local v212=0;local v213;local v214;while true do if (v212==0) then v213=v91[3];v214=v89[v213];v212=1;end if (v212==1) then for v425=v213 + 1 ,v91[354 -(87 + 263) ] do v214=v214   .. v89[v425] ;end v89[v91[2]]=v214;break;end end else local v215=v91[182 -(67 + 113) ];v89[v215](v89[v215 + 1 ]);end elseif (v92<=20) then if (v92<=18) then for v184=v91[2],v91[3] do v89[v184]=nil;end elseif (v92==19) then local v216=0;local v217;while true do if (v216==0) then v217=v91[2];v89[v217]=v89[v217](v21(v89,v217 + 1 ,v91[3]));break;end end else v89[v91[2]]=v89[v91[3]]%v89[v91[4]] ;end elseif (v92<=(397 -(85 + 291))) then local v145=0;local v146;local v147;while true do if (v145==0) then v146=v91[2];v147=v89[v146];v145=1;end if (v145==1) then for v363=v146 + 1 ,v84 do v15(v147,v89[v363]);end break;end end elseif (v92>(1287 -(243 + 1022))) then v89[v91[2]]=v91[3] + v89[v91[4]] ;else v56[v91[3]]=v89[v91[2]];end elseif (v92<=35) then if (v92<=29) then if (v92<=26) then if (v92<=(18 + 6)) then v89[v91[2]]=v91[3] + v89[v91[4]] ;elseif (v92>(95 -70)) then do return;end else v89[v91[2]]=v89[v91[3]];end elseif (v92<=(65 -38)) then v89[v91[2 + 0 ]]=v57[v91[3]];elseif (v92==(21 + 7)) then v89[v91[2]]=v89[v91[3]] + v91[4] ;elseif v89[v91[7 -5 ]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=32) then if (v92<=30) then for v186=v91[2],v91[1183 -(1123 + 57) ] do v89[v186]=nil;end elseif (v92==(983 -(802 + 150))) then v89[v91[2]]=v89[v91[7 -4 ]];else local v227=0;local v228;local v229;local v230;local v231;while true do if (v227==2) then for v426=v228,v84 do local v427=0;while true do if (v427==0) then v231=v231 + (255 -(163 + 91)) ;v89[v426]=v229[v231];break;end end end break;end if (v227==1) then v84=(v230 + v228) -1 ;v231=0;v227=2;end if (v227==0) then v228=v91[2];v229,v230=v82(v89[v228](v89[v228 + 1 + 0 ]));v227=1;end end end elseif (v92<=33) then v56[v91[3]]=v89[v91[2]];elseif (v92==34) then local v232=v91[2];v89[v232]=v89[v232]();else v89[v91[3 -1 ]]=v89[v91[3]][v91[4]];end elseif (v92<=41) then if (v92<=38) then if (v92<=(1966 -(1869 + 61))) then local v153=v91[2];local v154=v89[v153];local v155=v89[v153 + 2 ];if (v155>0) then if (v154>v89[v153 + 1 + 0 ]) then v83=v91[3];else v89[v153 + 3 ]=v154;end elseif (v154<v89[v153 + 1 ]) then v83=v91[3];else v89[v153 + 3 ]=v154;end elseif (v92>37) then local v236=v91[2];local v237,v238=v82(v89[v236](v21(v89,v236 + 1 ,v84)));v84=(v238 + v236) -1 ;local v239=0;for v330=v236,v84 do local v331=0;while true do if (v331==0) then v239=v239 + 1 ;v89[v330]=v237[v239];break;end end end else local v240=0;local v241;local v242;local v243;local v244;while true do if (1==v240) then v84=(v243 + v241) -1 ;v244=0;v240=2;end if (v240==2) then for v430=v241,v84 do local v431=0;while true do if (0==v431) then v244=v244 + 1 ;v89[v430]=v242[v244];break;end end end break;end if (v240==0) then v241=v91[1 + 1 ];v242,v243=v82(v89[v241](v21(v89,v241 + 1 ,v84)));v240=1;end end end elseif (v92<=39) then if (v89[v91[2]]==v89[v91[1001 -(915 + 82) ]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==40) then v89[v91[5 -3 ]]=v56[v91[3]];elseif (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=44) then if (v92<=42) then v89[v91[2]]=v91[3]~=(0 -0) ;elseif (v92>(65 -22)) then v89[v91[2]]=v89[v91[3]]%v91[4] ;else local v249=0;local v250;while true do if (v249==0) then v250=v91[2];do return v21(v89,v250,v84);end break;end end end elseif (v92<=(27 + 19)) then if (v92>45) then if v89[v91[2]] then v83=v83 + (1 -0) ;else v83=v91[3];end elseif (v89[v91[1189 -(1069 + 118) ]]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==47) then v57[v91[3]]=v89[v91[2]];else v89[v91[2]][v89[v91[3]]]=v89[v91[8 -4 ]];end elseif (v92<=72) then if (v92<=60) then if (v92<=54) then if (v92<=51) then if (v92<=49) then v89[v91[2 -0 ]]= #v89[v91[3 + 0 ]];elseif (v92>50) then v89[v91[2]][v91[3]]=v91[4];else v89[v91[2]]=v41(v80[v91[3]],nil,v57);end elseif (v92<=52) then local v158=v91[2];local v159,v160=v82(v89[v158](v21(v89,v158 + 1 ,v91[1477 -(1329 + 145) ])));v84=(v160 + v158) -(972 -(140 + 831)) ;local v161=0;for v188=v158,v84 do v161=v161 + (1851 -(1409 + 441)) ;v89[v188]=v159[v161];end elseif (v92>53) then local v258=0;local v259;while true do if (v258==0) then v259=v91[2];do return v89[v259](v21(v89,v259 + 1 ,v91[3]));end break;end end else v89[v91[2]][v89[v91[3]]]=v91[4];end elseif (v92<=57) then if (v92<=55) then if  not v89[v91[3 -1 ]] then v83=v83 + (719 -(15 + 703)) ;else v83=v91[3];end elseif (v92>56) then local v263=0;local v264;local v265;local v266;local v267;while true do if (0==v263) then v264=v91[2];v265,v266=v82(v89[v264](v21(v89,v264 + 1 ,v91[3])));v263=1;end if (v263==2) then for v432=v264,v84 do local v433=0;while true do if (v433==0) then v267=v267 + 1 + 0 ;v89[v432]=v265[v267];break;end end end break;end if (v263==1) then v84=(v266 + v264) -1 ;v267=0;v263=2;end end else local v268=0;local v269;while true do if (v268==0) then v269=v91[2];v89[v269]=v89[v269](v21(v89,v269 + 1 ,v84));break;end end end elseif (v92<=58) then local v162=0;local v163;local v164;while true do if (v162==0) then v163=v91[2];v164=v89[v91[3]];v162=1;end if (v162==1) then v89[v163 + (439 -(262 + 176)) ]=v164;v89[v163]=v164[v91[4]];break;end end elseif (v92>59) then local v270=v91[2];v89[v270](v21(v89,v270 + 1 ,v84));else do return;end end elseif (v92<=66) then if (v92<=63) then if (v92<=(11 + 50)) then v89[v91[2]]=v91[3]~=0 ;elseif (v92==62) then do return v89[v91[2]]();end else v89[v91[2]]=v89[v91[3]][v89[v91[4]]];end elseif (v92<=64) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>65) then if (v89[v91[2]]~=v91[4]) then v83=v83 + 1 ;else v83=v91[4 -1 ];end else v89[v91[2]]=v89[v91[3 + 0 ]] + v91[4] ;end elseif (v92<=69) then if (v92<=67) then if (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>68) then v89[v91[2]][v91[794 -(368 + 423) ]]=v91[4];else local v278=0;local v279;local v280;local v281;while true do if (v278==0) then v279=v91[1723 -(345 + 1376) ];v280=v89[v279 + 2 ];v278=1;end if (v278==2) then if (v280>0) then if (v281<=v89[v279 + 1 ]) then v83=v91[3];v89[v279 + 3 ]=v281;end elseif (v281>=v89[v279 + 1 ]) then v83=v91[3];v89[v279 + 3 ]=v281;end break;end if (v278==1) then v281=v89[v279] + v280 ;v89[v279]=v281;v278=2;end end end elseif (v92<=70) then local v166=0;local v167;while true do if (v166==0) then v167=v91[2];v89[v167]=v89[v167]();break;end end elseif (v92>71) then v89[v91[6 -4 ]]=v56[v91[3]];else v57[v91[3]]=v89[v91[2]];end elseif (v92<=84) then if (v92<=78) then if (v92<=75) then if (v92<=73) then v89[v91[2]]=v41(v80[v91[3]],nil,v57);elseif (v92==74) then v89[v91[20 -(10 + 8) ]]={};else local v287=0;local v288;while true do if (v287==0) then v288=v91[2];v89[v288]=v89[v288](v89[v288 + 1 ]);break;end end end elseif (v92<=76) then v89[v91[2]]=v89[v91[3]]%v91[4] ;elseif (v92>77) then v83=v91[3];else local v290=v91[2];do return v21(v89,v290,v84);end end elseif (v92<=81) then if (v92<=79) then local v170=0;local v171;local v172;local v173;while true do if (v170==0) then v171=v91[2];v172=v89[v171];v170=1;end if (v170==1) then v173=v89[v171 + (8 -6) ];if (v173>0) then if (v172>v89[v171 + 1 ]) then v83=v91[3];else v89[v171 + (11 -8) ]=v172;end elseif (v172<v89[v171 + 1 ]) then v83=v91[3];else v89[v171 + 3 ]=v172;end break;end end elseif (v92==80) then v89[v91[2]]=v89[v91[1209 -(696 + 510) ]][v89[v91[7 -3 ]]];else local v293=0;local v294;local v295;local v296;local v297;while true do if (1==v293) then v84=(v296 + v294) -1 ;v297=442 -(416 + 26) ;v293=2;end if (v293==2) then for v434=v294,v84 do local v435=0;while true do if (0==v435) then v297=v297 + 1 ;v89[v434]=v295[v297];break;end end end break;end if (v293==0) then v294=v91[2];v295,v296=v82(v89[v294](v89[v294 + (1263 -(1091 + 171)) ]));v293=1;end end end elseif (v92<=82) then local v174=v91[2];v89[v174](v21(v89,v174 + 1 ,v91[9 -6 ]));elseif (v92>83) then local v298=0;local v299;local v300;while true do if (1==v298) then for v436=v299 + 1 ,v84 do v15(v300,v89[v436]);end break;end if (v298==0) then v299=v91[2];v300=v89[v299];v298=1;end end else local v301=v91[2];local v302=v89[v91[3]];v89[v301 + 1 + 0 ]=v302;v89[v301]=v302[v91[4]];end elseif (v92<=90) then if (v92<=87) then if (v92<=85) then local v175=0;local v176;while true do if (v175==0) then v176=v91[2];v89[v176](v89[v176 + (3 -2) ]);break;end end elseif (v92==(285 -199)) then local v306=0;local v307;while true do if (0==v306) then v307=v91[2];v89[v307]=v89[v307](v89[v307 + 1 ]);break;end end else local v308=0;local v309;while true do if (v308==0) then v309=v91[2];v89[v309]=v89[v309](v21(v89,v309 + 1 ,v91[3]));break;end end end elseif (v92<=(462 -(123 + 251))) then local v177=0;local v178;local v179;while true do if (v177==0) then v178=v91[1 + 1 ];v179={};v177=1;end if (v177==1) then for v373=1, #v88 do local v374=v88[v373];for v404=0, #v374 do local v405=0;local v406;local v407;local v408;while true do if (1==v405) then v408=v406[9 -7 ];if ((v407==v89) and (v408>=v178)) then v179[v408]=v407[v408];v406[1]=v179;end break;end if (v405==0) then v406=v374[v404];v407=v406[1];v405=1;end end end end break;end end elseif (v92==89) then local v310=0;local v311;while true do if (v310==0) then v311=v91[2];do return v89[v311](v21(v89,v311 + 1 ,v91[4 -1 ]));end break;end end else do return v89[v91[2]]();end end elseif (v92<=93) then if (v92<=91) then v89[v91[2]]=v89[v91[3]][v91[4]];elseif (v92==92) then local v312=0;local v313;while true do if (v312==0) then v313=v91[2];v89[v313](v21(v89,v313 + (439 -(145 + 293)) ,v91[3]));break;end end else local v314=0;local v315;while true do if (v314==0) then v315=v91[1 + 1 ];v89[v315]=v89[v315](v21(v89,v315 + 1 + 0 ,v84));break;end end end elseif (v92<=95) then if (v92>(930 -(660 + 176))) then v89[v91[2]][v89[v91[3]]]=v91[434 -(44 + 386) ];else v83=v91[3];end elseif (v92==96) then v89[v91[2]]=v91[1489 -(998 + 488) ];else v89[v91[2]]= #v89[v91[1 + 2 ]];end v83=v83 + 1 ;break;end end end end;end return v41(v40(),{},v28)(...);end if (v29==3) then function v36()local v61=v35();local v62=v35();local v63=1;local v64=(v32(v62,1,20) * (2^32)) + v61 ;local v65=v32(v62,21,31);local v66=((v32(v62,32)==1) and  -(2 -1)) or 1 ;if (v65==(0 + 0)) then if (v64==0) then return v66 * (0 -0) ;else v65=1;v63=0;end elseif (v65==2047) then return ((v64==0) and (v66 * (1/(0 -0)))) or (v66 * NaN) ;end return v16(v66,v65-(1882 -(814 + 45)) ) * (v63 + (v64/(2^52))) ;end v37=nil;function v37(v67)local v68=0;local v69;local v70;while true do if (v68==1) then v69=v11(v27,v30,(v30 + v67) -1 );v30=v30 + v67 ;v68=2;end if (v68==3) then return v14(v70);end if (v68==2) then v70={};for v105=2 -1 , #v69 do v70[v105]=v10(v9(v11(v69,v105,v105)));end v68=3;end if (v68==0) then v69=nil;if  not v67 then v67=v35();if (v67==0) then return "";end end v68=1;end end end v38=v35;v29=4;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\127\79","\221\81\97\178\212\152\176"),function(v71)if (v9(v71,2)==79) then v31=v8(v11(v71,1,1 + 0 ));return "";else local v99=v10(v8(v71,16));if v31 then local v107=v13(v99,v31);v31=nil;return v107;else return v99;end end end);v32=nil;v29=1;end if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v72=0;local v73;local v74;local v75;local v76;local v77;local v78;while true do if (2==v72) then for v108=1,v77 do local v109=v33();local v110;if (v109==1) then v110=v33()~=(0 -0) ;elseif (v109==2) then v110=v36();elseif (v109==3) then v110=v37();end v78[v108]=v110;end v76[888 -(261 + 624) ]=v33();for v112=1,v35() do local v113=v33();if (v32(v113,1,1)==(0 -0)) then local v118=v32(v113,3 -1 ,3);local v119=v32(v113,4,15 -9 );local v120={v34(),v34(),nil,nil};if (v118==0) then local v122=0;while true do if (v122==0) then v120[3]=v34();v120[4]=v34();break;end end elseif (v118==(569 -(367 + 201))) then v120[3]=v35();elseif (v118==2) then v120[3]=v35() -(2^16) ;elseif (v118==3) then local v133=0;while true do if (0==v133) then v120[3]=v35() -((1425 -(630 + 793))^16) ;v120[4]=v34();break;end end end if (v32(v119,1,1)==(928 -(214 + 713))) then v120[2]=v78[v120[2]];end if (v32(v119,2,1 + 1 )==1) then v120[3]=v78[v120[3]];end if (v32(v119,9 -6 ,14 -11 )==(1 + 0)) then v120[4]=v78[v120[4]];end v73[v112]=v120;end end v72=3;end if (v72==3) then for v114=1,v35() do v74[v114-1 ]=v40();end return v76;end if (v72==0) then v73={};v74={};v75={};v72=1;end if (v72==1) then v76={v73,v74,nil,v75};v77=v35();v78={};v72=2;end end end v29=5;end end end vv17(),...);
-- MADE BY GODWARE --
